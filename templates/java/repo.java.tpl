{{define "repo"}}
package {{.BasePackageName}}.domain.repo;

import {{.BasePackageName}}.domain.model.{{.ModelClassName}};
import {{.BasePackageName}}.infra.persistence.sql.mapper.{{.ModelClassName}}Mapper
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;

/**
 * Generated by sqlxx.
 */

public class {{.ModelClassName}}Repo {
  private final SqlSessionFactory factory;

  public {{.ModelClassName}}Repo(SqlSessionFactory factory) {
    this.factory = factory;
  }

  // =========================================== QUERY START ===========================================

  public {{.ModelClassName}} getById(Long id) {
    try (SqlSession session = factory.openSession(true)) {
      {{.ModelClassName}}Mapper mapper = session.getMapper({{.ModelClassName}}Mapper.class);
      return mapper.getById(id);
    }
  }

  // =========================================== QUERY START ===========================================

  // =========================================== UPDATE START ==========================================

  public Integer update({{.ModelClassName}} {{.ModelParamName}}) {
    try (SqlSession session = factory.openSession(true)) {
      {{.ModelClassName}}Mapper mapper = session.getMapper({{.ModelClassName}}Mapper.class);
      return mapper.update({{.ModelParamName}});
    }
  }

  // =========================================== UPDATE END ============================================

  // =========================================== INSERT START ==========================================

  public Integer add({{.ModelClassName}} {{.ModelParamName}}) {
    try (SqlSession session = factory.openSession(true)) {
      {{.ModelClassName}}Mapper mapper = session.getMapper({{.ModelClassName}}Mapper.class);
      return mapper.add({{.ModelParamName}});
    }
  }

  // =========================================== INSERT END ============================================

  // =========================================== DELETE START ==========================================

  public Integer deleteById(Long id) {
    try (SqlSession session = factory.openSession(true)) {
      {{.ModelClassName}}Mapper mapper = session.getMapper({{.ModelClassName}}Mapper.class);
      return mapper.deleteById(id);
    }
  }

  // =========================================== DELETE END ============================================
}

{{end}}